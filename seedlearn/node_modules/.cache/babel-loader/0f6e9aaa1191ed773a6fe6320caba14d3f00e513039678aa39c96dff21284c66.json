{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-js\\\\react-training\\\\first-react\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css'; // Import the CSS file containing your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FlipCard() {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const handleToggle = () => {\n    setIsSignUp(!isSignUp);\n  };\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform submission logic here\n    // You can send the form data to an API or perform any other actions\n\n    // Clear form fields after submission\n    setemail('');\n    setpassword('');\n  };\n  const handleClick = e => {\n    e.preventDefault();\n    const log = {\n      email,\n      password\n    };\n    console.log(log);\n    fetch(\"http://localhost:2024/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(log)\n    }).then(() => {\n      console.log(\"New buyer added\");\n    });\n  };\n  const [name, setname] = useState('');\n  const handleSubmit2 = e => {\n    e.preventDefault();\n    // Perform submission logic here\n    // You can send the form data to an API or perform any other actions\n\n    // Clear form fields after submission\n    setename('');\n  };\n  const handleClick2 = e => {\n    e.preventDefault();\n    const log = {\n      email,\n      password\n    };\n    console.log(sig);\n    fetch(\"http://localhost:2023/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sig)\n    }).then(() => {\n      console.log(\"New buyer added\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: handleToggle,\n          checked: isSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flip-card__inner ${isSignUp ? 'flipped' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-card__front\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              className: \"flip-card__form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                name: \"email\",\n                value: email,\n                onChange: e => setemail(e.target.value),\n                className: \"flip-card__input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                value: password,\n                onChange: e => setpassword(e.target.value),\n                className: \"flip-card__input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flip-card__btn\",\n                onClick: handleClick,\n                children: \"Let's go!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-card__back\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              className: \"flip-card__form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                className: \"flip-card__input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                name: \"email\",\n                className: \"flip-card__input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                className: \"flip-card__input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flip-card__btn\",\n                children: \"Confirm!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(FlipCard, \"kUbFAT4L5FlcdeoaQwq8Mm5aq4Y=\");\n_c = FlipCard;\nexport default FlipCard;\nvar _c;\n$RefreshReg$(_c, \"FlipCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FlipCard","_s","isSignUp","setIsSignUp","handleToggle","email","setemail","password","setpassword","handleSubmit","e","preventDefault","handleClick","log","console","fetch","method","headers","body","JSON","stringify","then","name","setname","handleSubmit2","setename","handleClick2","sig","className","children","onSubmit","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","action","placeholder","value","target","onClick","_c","$RefreshReg$"],"sources":["D:/React-js/react-training/first-react/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './login.css'; // Import the CSS file containing your styles\r\n\r\nfunction FlipCard() {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setIsSignUp(!isSignUp);\r\n  };\r\n\r\n  const [email, setemail] = useState(''); \r\n  const [password, setpassword] = useState(''); \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Perform submission logic here\r\n    // You can send the form data to an API or perform any other actions\r\n\r\n    // Clear form fields after submission\r\n    setemail('');\r\n    setpassword('');\r\n  };\r\n  const handleClick=(e)=>{\r\n    e.preventDefault()\r\n    const log={email,password}\r\n    console.log(log)\r\n    fetch(\"http://localhost:2024/login\",{\r\n      method:\"POST\",\r\n      headers:{\"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(log)\r\n\r\n  }).then(()=>{\r\n    console.log(\"New buyer added\")\r\n  })\r\n}\r\n \r\n\r\nconst [name, setname] = useState(''); \r\n  \r\n  const handleSubmit2 = (e) => {\r\n    e.preventDefault();\r\n    // Perform submission logic here\r\n    // You can send the form data to an API or perform any other actions\r\n\r\n    // Clear form fields after submission\r\n    setename('');\r\n    \r\n  };\r\n  const handleClick2=(e)=>{\r\n    e.preventDefault()\r\n    const log={email,password}\r\n    console.log(sig)\r\n    fetch(\"http://localhost:2023/signin\",{\r\n      method:\"POST\",\r\n      headers:{\"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(sig)\r\n\r\n  }).then(()=>{\r\n    console.log(\"New buyer added\")\r\n  })\r\n}\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <form onSubmit={handleSubmit}>\r\n      <label className=\"switch\">\r\n        <input className=\"toggle\" type=\"checkbox\" onChange={handleToggle} checked={isSignUp} />\r\n        <span className=\"slider\"></span>\r\n        <span className=\"card-side\"></span>\r\n        <div className={`flip-card__inner ${isSignUp ? 'flipped' : ''}`}>\r\n          <div className=\"flip-card__front\">\r\n            <div className=\"title\">Log in</div>\r\n            <form action=\"\" className=\"flip-card__form\">\r\n              <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={(e) => setemail(e.target.value)} className=\"flip-card__input\" />\r\n              <input type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={(e) => setpassword(e.target.value)} className=\"flip-card__input\" />\r\n              <button className=\"flip-card__btn\" onClick={handleClick}>Let's go!</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"flip-card__back\">\r\n            <div className=\"title\">Sign up</div>\r\n            <form action=\"\" className=\"flip-card__form\">\r\n              <input type=\"text\" placeholder=\"Name\" className=\"flip-card__input\" />\r\n              <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"flip-card__input\" />\r\n              <input type=\"password\" placeholder=\"Password\" name=\"password\" className=\"flip-card__input\" />\r\n              <button className=\"flip-card__btn\">Confirm!</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </label>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlipCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}